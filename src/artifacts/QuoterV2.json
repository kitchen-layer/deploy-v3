{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_factory",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_WETH9",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "WETH9",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "factory",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "quoteExactInput",
      "inputs": [
        {
          "name": "path",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "sqrtPriceX96AfterList",
          "type": "uint160[]",
          "internalType": "uint160[]"
        },
        {
          "name": "initializedTicksCrossedList",
          "type": "uint32[]",
          "internalType": "uint32[]"
        },
        {
          "name": "gasEstimate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "quoteExactInputSingle",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
          "components": [
            {
              "name": "tokenIn",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "tokenOut",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "sqrtPriceX96After",
          "type": "uint160",
          "internalType": "uint160"
        },
        {
          "name": "initializedTicksCrossed",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "gasEstimate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "quoteExactOutput",
      "inputs": [
        {
          "name": "path",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "sqrtPriceX96AfterList",
          "type": "uint160[]",
          "internalType": "uint160[]"
        },
        {
          "name": "initializedTicksCrossedList",
          "type": "uint32[]",
          "internalType": "uint32[]"
        },
        {
          "name": "gasEstimate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "quoteExactOutputSingle",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
          "components": [
            {
              "name": "tokenIn",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "tokenOut",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "sqrtPriceX96After",
          "type": "uint160",
          "internalType": "uint160"
        },
        {
          "name": "initializedTicksCrossed",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "gasEstimate",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "uniswapV3SwapCallback",
      "inputs": [
        {
          "name": "amount0Delta",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "amount1Delta",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "path",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    }
  ],
  "bytecode": {
    "object": "0x60c03461008757601f6118b638819003918201601f19168301916001600160401b0383118484101761008c57808492604094855283398101031261008757610052602061004b836100a2565b92016100a2565b9060805260a0526040516117ff90816100b782396080518181816103820152818161045a0152610e2d015260a05181609a0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100875756fe6080604052600436101561001257600080fd5b6000803560e01c9081632f80bb1d146100cc5781634aa4a4fc1461008557508063bd21704a14610080578063c45a01551461007b578063c6a5026a14610076578063cdca1753146100715763fa461e331461006c57600080fd5b6103f0565b6103d6565b6103b1565b61036c565b610312565b346100c957806003193601126100c9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b346100c9576100f66100e66100e0366101d7565b9061066a565b9060409492945194859485610209565b0390f35b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761012c57604052565b6100fa565b6060810190811067ffffffffffffffff82111761012c57604052565b90601f8019910116810190811067ffffffffffffffff82111761012c57604052565b67ffffffffffffffff811161012c57601f01601f191660200190565b81601f820112156101d2578035906101a28261016f565b926101b0604051948561014d565b828452602083830101116101d257816000926020809301838601378301015290565b600080fd5b60406003198201126101d2576004359067ffffffffffffffff82116101d2576102029160040161018b565b9060243590565b94939290916080860192865260209260808488015281518091528360a0880192019060005b81811061027c57505050858103604087015282808351928381520192019260005b8281106102625750505060609150930152565b845163ffffffff168452938101939281019260010161024f565b82516001600160a01b03168452928501929185019160010161022e565b6001600160a01b038116036101d257565b60a09060031901126101d257604051906102c382610110565b816004356102d081610299565b81526024356102de81610299565b6020820152604435604082015260643562ffffff811681036101d257606082015260806084359161030e83610299565b0152565b346101d25760a03660031901126101d2576100f6610337610332366102aa565b610870565b604080519485526001600160a01b03909316602085015263ffffffff9091169183019190915260608201529081906080820190565b346101d25760003660031901126101d2576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101d25760a03660031901126101d2576100f66103376103d1366102aa565b610a85565b346101d2576100f66100e66103ea366101d7565b90610b69565b346101d25760603660031901126101d25760043560243560443567ffffffffffffffff81116101d25761042790369060040161018b565b906000906104488285139384801561059a575b61044390610c31565b610ceb565b919461047e610458848489611027565b7f00000000000000000000000000000000000000000000000000000000000000006117af565b501561056c576104bd6104b16004949360e0936104a160018060a01b039661077c565b95808216908a1610999598610e15565b6001600160a01b031690565b60405193848092633850c7bd851b82525afa928315610567576060958193829561052b575b50156104fc57505060405192835260208301526040820152fd5b939093548061051a575b505060405192835260208301526040820152fd5b6105249114610c31565b3880610506565b90945061055191935060e03d60e011610560575b610549818361014d565b810190610c55565b505050505092909293386104e2565b503d61053f565b610827565b6104bd6104b1600494979360e09361058a60018060a01b039661077c565b95808a1690821610999598610e15565b5083831361043a565b67ffffffffffffffff811161012c5760051b60200190565b906105c5826105a3565b6105d2604051918261014d565b82815280926105e3601f19916105a3565b0190602036910137565b80518210156106015760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b90601f820180921161063b57565b610617565b601701908160171161063b57565b9190820180921161063b57565b600019811461063b5760010190565b91906106fd6106f292600094600061068961068483610cd7565b6105bb565b968261072e61072861070c6107216106a46106848e99610cd7565b9a60009c8d915b62ffffff6106b889610ceb565b9193906040908151956106ca87610110565b6001600160a01b03918216875216602086015284015216606082015260808101899052610870565b95929d90938c6105ed565b6001600160a01b039091169052565b6107168d8d6105ed565b9063ffffffff169052565b889561064e565b9861065b565b9560428251101560001461077257509061074a86949392610d66565b93976106fd96939490939192909161072e916107289161070c9161072191906106f2906106ab565b9897955050505050565b600160ff1b811461063b5760000390565b91908260409103126101d2576020825192015190565b60005b8381106107b65750506000910152565b81810151838201526020016107a6565b906020916107df815180928185528580860191016107a3565b601f01601f1916010190565b6001600160a01b039182168152911515602083015260408201929092529116606082015260a060808201819052610824929101906107c6565b90565b6040513d6000823e3d90fd5b3d1561085e573d906108448261016f565b91610852604051938461014d565b82523d6000602084013e565b606090565b9190820391821161063b57565b8051602082018051606084018051600096956001600160a01b0395938616938616848110948994859485948594909361099a93926108b692919062ffffff165b91610e15565b98608084019a806108cd8d5160018060a01b031690565b1615610a79575b8b895a9b60409687966109026108f46108ef8a8d0151610e55565b61077c565b95516001600160a01b031690565b808716610a6657508215610a405761098c61094a61093c6109326401000276a45b9a5b516001600160a01b031690565b935162ffffff1690565b9b516001600160a01b031690565b89519b8c93602085019192602b936bffffffffffffffffffffffff19809360601b16845262ffffff60e81b9060e81b16601484015260601b1660178201520190565b03601f1981018a528961014d565b6109ba865198899687958694630251596160e31b865230600487016107eb565b03928d165af19182610a15575b5050610a0b575050506109fb9495506109ef6104b16108f46109e7610833565b945a90610863565b15610a03575b50610e64565b929391929091565b8055386109f5565b9450945094915050565b81610a3492903d10610a39575b610a2c818361014d565b81019061078d565b6109c7565b503d610a22565b61098c61094a61093c61093273fffd8963efd1fc6a506488495d951d5263988d25610923565b61094a61093c61093261098c939a610925565b604085015189556108d4565b80516020820180516060840180516000969591946001600160a01b03948894859485949293859392891690891681811093610ac5929062ffffff166108b0565b975a996040948594610af2610adc87870151610e55565b60808701519094906001600160a01b0316610902565b610b12865198899687958694630251596160e31b865230600487016107eb565b03928b165af19182610b4e575b5050610b47575050506109fb929350610b41610b39610833565b925a90610863565b91610e64565b9250925092565b81610b6492903d10610a3957610a2c818361014d565b610b1f565b91906106fd6106f2926000946000610b8361068483610cd7565b9682610bed61072861070c610721610b9e6106848e99610cd7565b9a60009c8d915b62ffffff610bb289610ceb565b91604094919490815195610bc587610110565b6001600160a01b03918216875216602086015284015216606082015260808101899052610a85565b95604282511015600014610772575090610c0986949392610d66565b93976106fd969394909391929091610bed916107289161070c9161072191906106f290610ba5565b156101d257565b51908160020b82036101d257565b519061ffff821682036101d257565b908160e09103126101d2578051610c6b81610299565b91610c7860208301610c38565b91610c8560408201610c46565b91610c9260608301610c46565b91610c9f60808201610c46565b9160a082015160ff811681036101d25760c09092015180151581036101d25790565b634e487b7160e01b600052601260045260246000fd5b51601319810190811161063b576017900490565b90610cfa601483511015610f66565b602082015160601c916017815110610d2a576037601782015191610d22602b82511015610f66565b015160601c91565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b6044820152606490fd5b8051601619918282019082821161063b57610d8b82610d848161062d565b1015610faa565b610d996017610d8484610640565b610dae8151610da784610640565b1115610fe7565b60178303610dcb5750505050604051600081526020810160405290565b601760405194601f8416801560051b9182828901019687010193010101905b808410610e025750508252601f01601f191660405290565b9092835181526020809101930190610dea565b6001600160a01b0392610e5192610e2b92611027565b7f0000000000000000000000000000000000000000000000000000000000000000611083565b1690565b600160ff1b8110156101d25790565b604051633850c7bd60e01b815291939192919060e0846004816001600160a01b0389165afa93841561056757600094610f3e575b50805160608103610eca5750610eba81602080610ec394518301019101611268565b9195909661135a565b9293929190565b604411610f0657610eea816024806004610f0295015183010191016111f8565b60405162461bcd60e51b815291829160048301611257565b0390fd5b60405162461bcd60e51b815260206004820152601060248201526f2ab732bc3832b1ba32b21032b93937b960811b6044820152606490fd5b610f5891945060e03d60e01161056057610549818361014d565b505050505090509238610e98565b15610f6d57565b60405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606490fd5b15610fb157565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b15610fee57565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b9162ffffff9160006040805161103c81610131565b8281526020810183905201526001600160a01b03908082168583161161107d575b816040519561106b87610131565b16855216602084015216604082015290565b9361105d565b81516020830180519092916001600160a01b03908116911611156101d2576111dd6111e9610824946104b19460008060405160208101906327b7cf8560e01b82527f33e0e214aaaa311945afafd84672c570c653a094e74e911ed49689d566f71cd36024820152602481526110f781610131565b51906a636f6e736f6c652e6c6f675afa5081516111379060409061112c906001600160a01b031693516001600160a01b031690565b93015162ffffff1690565b604080516001600160a01b0393841660208201908152949093169083015262ffffff166060808301919091528152601f19919061117560808261014d565b5190206040516001600160f81b03196020820190815260609690961b6bffffffffffffffffffffffff1916602182015260358101919091527f33e0e214aaaa311945afafd84672c570c653a094e74e911ed49689d566f71cd360558201529283906075820190565b0390810183528261014d565b5190206001600160a01b031690565b6020818303126101d25780519067ffffffffffffffff82116101d2570181601f820112156101d257805161122b8161016f565b92611239604051948561014d565b818452602082840101116101d25761082491602080850191016107a3565b9060206108249281815201906107c6565b908160609103126101d2578051916108246040602084015161128981610299565b9301610c38565b908160209103126101d25761082490610c38565b60020b9060020b9081156112c757627fffff19811460001983141661063b570590565b610cc1565b9060020b9081156112c75760020b0790565b60020b6101000190627fffff8213627fffff1983121761063b57565b908160209103126101d2575190565b60ff1660ff039060ff821161063b57565b91909163ffffffff8080941691160191821161063b57565b60010b617fff811461063b5760010190565b63ffffffff908116600019019190821161063b57565b6040516334324e9f60e21b8152909392600092916020816004816001600160a01b038a165afa80156105675761139991600091611790575b50836112a4565b6040516334324e9f60e21b81529094906020816004816001600160a01b038b165afa8015610567576113d3916000916117905750836112a4565b9460020b90610100928383079660008860020b12611780575b60020b9384079260008460020b12611770575b60405163299ce14b60e11b8152600886901d60010b60048201526020816024816001600160a01b038e165afa90811561056757600091611751575b5060018560ff161b16151595866116eb575b866116da575b60405163299ce14b60e11b8152600883901d60010b60048201526020816024816001600160a01b038f165afa908115610567576000916116bb575b5060018a60ff161b161515928361163f575b8361162d575b50508460081d60010b8160081d60010b128015611607575b156115e45760081d60010b9660ff169360081d60010b9260ff1693969590965b60ff60001991161b5b8360010b8760010b136115b7578360010b8760010b1461159a575b60405163299ce14b60e11b8152600188900b6004820152916020836024816001600160a01b038e165afa80156105675761154f61155c93611556926115629660009161156b575b50166117cc565b61ffff1690565b9061131a565b95611332565b946000196114e6565b61158d915060203d602011611593575b611585818361014d565b8101906112fa565b38611548565b503d61157b565b6115b16115a686611309565b60ff60001991161c90565b16611501565b50959450955050506115d4575b6115cb5790565b61082490611344565b906115de90611344565b906115c4565b9360089793971d60010b9660ff169360081d60010b9260ff1693969590966114dd565b508460081d60010b8160081d60010b1480156114bd575060ff841660ff891611156114bd565b600290810b91900b12915038806114a5565b6040516334324e9f60e21b81529093506020816004816001600160a01b038f165afa908115610567576116859161167f9160009161168c575b50836112cc565b60020b90565b159261149f565b6116ae915060203d6020116116b4575b6116a6818361014d565b810190611290565b38611678565b503d61169c565b6116d4915060203d60201161159357611585818361014d565b3861148d565b95508160020b8660020b1395611452565b6040516334324e9f60e21b81529096506020816004816001600160a01b038e165afa9081156105675761172b9161167f91600091611732575b50846112cc565b159561144c565b61174b915060203d6020116116b4576116a6818361014d565b38611724565b61176a915060203d60201161159357611585818361014d565b3861143a565b9261177a906112de565b926113ff565b9661178a906112de565b966113ec565b6117a9915060203d6020116116b4576116a6818361014d565b38611392565b6001600160a01b03916117c191611083565b16908133036101d257565b806000915b6117d9575090565b9061ffff80911690811461063b576001019060001981019080821161063b5716806117d156",
    "sourceMap": "1009:8845:26:-:0;;;;;;;;;;;;;-1:-1:-1;;1009:8845:26;;;;-1:-1:-1;;;;;1009:8845:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;522:18:48;;;550:14;;1009:8845:26;;;;;;;;522:18:48;1009:8845:26;;;;;;;;;;;;;;;550:14:48;1009:8845:26;;;;;;;-1:-1:-1;1009:8845:26;;;;;;-1:-1:-1;1009:8845:26;;;;;-1:-1:-1;1009:8845:26;;;;-1:-1:-1;;;;;1009:8845:26;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b6000803560e01c9081632f80bb1d146100cc5781634aa4a4fc1461008557508063bd21704a14610080578063c45a01551461007b578063c6a5026a14610076578063cdca1753146100715763fa461e331461006c57600080fd5b6103f0565b6103d6565b6103b1565b61036c565b610312565b346100c957806003193601126100c9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b346100c9576100f66100e66100e0366101d7565b9061066a565b9060409492945194859485610209565b0390f35b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761012c57604052565b6100fa565b6060810190811067ffffffffffffffff82111761012c57604052565b90601f8019910116810190811067ffffffffffffffff82111761012c57604052565b67ffffffffffffffff811161012c57601f01601f191660200190565b81601f820112156101d2578035906101a28261016f565b926101b0604051948561014d565b828452602083830101116101d257816000926020809301838601378301015290565b600080fd5b60406003198201126101d2576004359067ffffffffffffffff82116101d2576102029160040161018b565b9060243590565b94939290916080860192865260209260808488015281518091528360a0880192019060005b81811061027c57505050858103604087015282808351928381520192019260005b8281106102625750505060609150930152565b845163ffffffff168452938101939281019260010161024f565b82516001600160a01b03168452928501929185019160010161022e565b6001600160a01b038116036101d257565b60a09060031901126101d257604051906102c382610110565b816004356102d081610299565b81526024356102de81610299565b6020820152604435604082015260643562ffffff811681036101d257606082015260806084359161030e83610299565b0152565b346101d25760a03660031901126101d2576100f6610337610332366102aa565b610870565b604080519485526001600160a01b03909316602085015263ffffffff9091169183019190915260608201529081906080820190565b346101d25760003660031901126101d2576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101d25760a03660031901126101d2576100f66103376103d1366102aa565b610a85565b346101d2576100f66100e66103ea366101d7565b90610b69565b346101d25760603660031901126101d25760043560243560443567ffffffffffffffff81116101d25761042790369060040161018b565b906000906104488285139384801561059a575b61044390610c31565b610ceb565b919461047e610458848489611027565b7f00000000000000000000000000000000000000000000000000000000000000006117af565b501561056c576104bd6104b16004949360e0936104a160018060a01b039661077c565b95808216908a1610999598610e15565b6001600160a01b031690565b60405193848092633850c7bd851b82525afa928315610567576060958193829561052b575b50156104fc57505060405192835260208301526040820152fd5b939093548061051a575b505060405192835260208301526040820152fd5b6105249114610c31565b3880610506565b90945061055191935060e03d60e011610560575b610549818361014d565b810190610c55565b505050505092909293386104e2565b503d61053f565b610827565b6104bd6104b1600494979360e09361058a60018060a01b039661077c565b95808a1690821610999598610e15565b5083831361043a565b67ffffffffffffffff811161012c5760051b60200190565b906105c5826105a3565b6105d2604051918261014d565b82815280926105e3601f19916105a3565b0190602036910137565b80518210156106015760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b90601f820180921161063b57565b610617565b601701908160171161063b57565b9190820180921161063b57565b600019811461063b5760010190565b91906106fd6106f292600094600061068961068483610cd7565b6105bb565b968261072e61072861070c6107216106a46106848e99610cd7565b9a60009c8d915b62ffffff6106b889610ceb565b9193906040908151956106ca87610110565b6001600160a01b03918216875216602086015284015216606082015260808101899052610870565b95929d90938c6105ed565b6001600160a01b039091169052565b6107168d8d6105ed565b9063ffffffff169052565b889561064e565b9861065b565b9560428251101560001461077257509061074a86949392610d66565b93976106fd96939490939192909161072e916107289161070c9161072191906106f2906106ab565b9897955050505050565b600160ff1b811461063b5760000390565b91908260409103126101d2576020825192015190565b60005b8381106107b65750506000910152565b81810151838201526020016107a6565b906020916107df815180928185528580860191016107a3565b601f01601f1916010190565b6001600160a01b039182168152911515602083015260408201929092529116606082015260a060808201819052610824929101906107c6565b90565b6040513d6000823e3d90fd5b3d1561085e573d906108448261016f565b91610852604051938461014d565b82523d6000602084013e565b606090565b9190820391821161063b57565b8051602082018051606084018051600096956001600160a01b0395938616938616848110948994859485948594909361099a93926108b692919062ffffff165b91610e15565b98608084019a806108cd8d5160018060a01b031690565b1615610a79575b8b895a9b60409687966109026108f46108ef8a8d0151610e55565b61077c565b95516001600160a01b031690565b808716610a6657508215610a405761098c61094a61093c6109326401000276a45b9a5b516001600160a01b031690565b935162ffffff1690565b9b516001600160a01b031690565b89519b8c93602085019192602b936bffffffffffffffffffffffff19809360601b16845262ffffff60e81b9060e81b16601484015260601b1660178201520190565b03601f1981018a528961014d565b6109ba865198899687958694630251596160e31b865230600487016107eb565b03928d165af19182610a15575b5050610a0b575050506109fb9495506109ef6104b16108f46109e7610833565b945a90610863565b15610a03575b50610e64565b929391929091565b8055386109f5565b9450945094915050565b81610a3492903d10610a39575b610a2c818361014d565b81019061078d565b6109c7565b503d610a22565b61098c61094a61093c61093273fffd8963efd1fc6a506488495d951d5263988d25610923565b61094a61093c61093261098c939a610925565b604085015189556108d4565b80516020820180516060840180516000969591946001600160a01b03948894859485949293859392891690891681811093610ac5929062ffffff166108b0565b975a996040948594610af2610adc87870151610e55565b60808701519094906001600160a01b0316610902565b610b12865198899687958694630251596160e31b865230600487016107eb565b03928b165af19182610b4e575b5050610b47575050506109fb929350610b41610b39610833565b925a90610863565b91610e64565b9250925092565b81610b6492903d10610a3957610a2c818361014d565b610b1f565b91906106fd6106f2926000946000610b8361068483610cd7565b9682610bed61072861070c610721610b9e6106848e99610cd7565b9a60009c8d915b62ffffff610bb289610ceb565b91604094919490815195610bc587610110565b6001600160a01b03918216875216602086015284015216606082015260808101899052610a85565b95604282511015600014610772575090610c0986949392610d66565b93976106fd969394909391929091610bed916107289161070c9161072191906106f290610ba5565b156101d257565b51908160020b82036101d257565b519061ffff821682036101d257565b908160e09103126101d2578051610c6b81610299565b91610c7860208301610c38565b91610c8560408201610c46565b91610c9260608301610c46565b91610c9f60808201610c46565b9160a082015160ff811681036101d25760c09092015180151581036101d25790565b634e487b7160e01b600052601260045260246000fd5b51601319810190811161063b576017900490565b90610cfa601483511015610f66565b602082015160601c916017815110610d2a576037601782015191610d22602b82511015610f66565b015160601c91565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b6044820152606490fd5b8051601619918282019082821161063b57610d8b82610d848161062d565b1015610faa565b610d996017610d8484610640565b610dae8151610da784610640565b1115610fe7565b60178303610dcb5750505050604051600081526020810160405290565b601760405194601f8416801560051b9182828901019687010193010101905b808410610e025750508252601f01601f191660405290565b9092835181526020809101930190610dea565b6001600160a01b0392610e5192610e2b92611027565b7f0000000000000000000000000000000000000000000000000000000000000000611083565b1690565b600160ff1b8110156101d25790565b604051633850c7bd60e01b815291939192919060e0846004816001600160a01b0389165afa93841561056757600094610f3e575b50805160608103610eca5750610eba81602080610ec394518301019101611268565b9195909661135a565b9293929190565b604411610f0657610eea816024806004610f0295015183010191016111f8565b60405162461bcd60e51b815291829160048301611257565b0390fd5b60405162461bcd60e51b815260206004820152601060248201526f2ab732bc3832b1ba32b21032b93937b960811b6044820152606490fd5b610f5891945060e03d60e01161056057610549818361014d565b505050505090509238610e98565b15610f6d57565b60405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606490fd5b15610fb157565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b15610fee57565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b9162ffffff9160006040805161103c81610131565b8281526020810183905201526001600160a01b03908082168583161161107d575b816040519561106b87610131565b16855216602084015216604082015290565b9361105d565b81516020830180519092916001600160a01b03908116911611156101d2576111dd6111e9610824946104b19460008060405160208101906327b7cf8560e01b82527f33e0e214aaaa311945afafd84672c570c653a094e74e911ed49689d566f71cd36024820152602481526110f781610131565b51906a636f6e736f6c652e6c6f675afa5081516111379060409061112c906001600160a01b031693516001600160a01b031690565b93015162ffffff1690565b604080516001600160a01b0393841660208201908152949093169083015262ffffff166060808301919091528152601f19919061117560808261014d565b5190206040516001600160f81b03196020820190815260609690961b6bffffffffffffffffffffffff1916602182015260358101919091527f33e0e214aaaa311945afafd84672c570c653a094e74e911ed49689d566f71cd360558201529283906075820190565b0390810183528261014d565b5190206001600160a01b031690565b6020818303126101d25780519067ffffffffffffffff82116101d2570181601f820112156101d257805161122b8161016f565b92611239604051948561014d565b818452602082840101116101d25761082491602080850191016107a3565b9060206108249281815201906107c6565b908160609103126101d2578051916108246040602084015161128981610299565b9301610c38565b908160209103126101d25761082490610c38565b60020b9060020b9081156112c757627fffff19811460001983141661063b570590565b610cc1565b9060020b9081156112c75760020b0790565b60020b6101000190627fffff8213627fffff1983121761063b57565b908160209103126101d2575190565b60ff1660ff039060ff821161063b57565b91909163ffffffff8080941691160191821161063b57565b60010b617fff811461063b5760010190565b63ffffffff908116600019019190821161063b57565b6040516334324e9f60e21b8152909392600092916020816004816001600160a01b038a165afa80156105675761139991600091611790575b50836112a4565b6040516334324e9f60e21b81529094906020816004816001600160a01b038b165afa8015610567576113d3916000916117905750836112a4565b9460020b90610100928383079660008860020b12611780575b60020b9384079260008460020b12611770575b60405163299ce14b60e11b8152600886901d60010b60048201526020816024816001600160a01b038e165afa90811561056757600091611751575b5060018560ff161b16151595866116eb575b866116da575b60405163299ce14b60e11b8152600883901d60010b60048201526020816024816001600160a01b038f165afa908115610567576000916116bb575b5060018a60ff161b161515928361163f575b8361162d575b50508460081d60010b8160081d60010b128015611607575b156115e45760081d60010b9660ff169360081d60010b9260ff1693969590965b60ff60001991161b5b8360010b8760010b136115b7578360010b8760010b1461159a575b60405163299ce14b60e11b8152600188900b6004820152916020836024816001600160a01b038e165afa80156105675761154f61155c93611556926115629660009161156b575b50166117cc565b61ffff1690565b9061131a565b95611332565b946000196114e6565b61158d915060203d602011611593575b611585818361014d565b8101906112fa565b38611548565b503d61157b565b6115b16115a686611309565b60ff60001991161c90565b16611501565b50959450955050506115d4575b6115cb5790565b61082490611344565b906115de90611344565b906115c4565b9360089793971d60010b9660ff169360081d60010b9260ff1693969590966114dd565b508460081d60010b8160081d60010b1480156114bd575060ff841660ff891611156114bd565b600290810b91900b12915038806114a5565b6040516334324e9f60e21b81529093506020816004816001600160a01b038f165afa908115610567576116859161167f9160009161168c575b50836112cc565b60020b90565b159261149f565b6116ae915060203d6020116116b4575b6116a6818361014d565b810190611290565b38611678565b503d61169c565b6116d4915060203d60201161159357611585818361014d565b3861148d565b95508160020b8660020b1395611452565b6040516334324e9f60e21b81529096506020816004816001600160a01b038e165afa9081156105675761172b9161167f91600091611732575b50846112cc565b159561144c565b61174b915060203d6020116116b4576116a6818361014d565b38611724565b61176a915060203d60201161159357611585818361014d565b3861143a565b9261177a906112de565b926113ff565b9661178a906112de565b966113ec565b6117a9915060203d6020116116b4576116a6818361014d565b38611392565b6001600160a01b03916117c191611083565b16908133036101d257565b806000915b6117d9575090565b9061ffff80911690811461063b576001019060001981019080821161063b5716806117d156",
    "sourceMap": "1009:8845:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;420:39:48;-1:-1:-1;;;;;1009:8845:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1009:8845:26;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1009:8845:26;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1009:8845:26;;;;-1:-1:-1;;1009:8845:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1009:8845:26;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1009:8845:26;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;-1:-1:-1;;1009:8845:26;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1009:8845:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1009:8845:26;;;;;;328:41:48;-1:-1:-1;;;;;1009:8845:26;;;;;;;;;;;;-1:-1:-1;;1009:8845:26;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;1009:8845:26;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1860:16:26;2020:22;1860:16;;;:36;;;;;;1009:8845;1852:45;;;:::i;:::-;2020:22;:::i;:::-;871:43:64;;847:68;871:43;;;;;:::i;:::-;2086:7:26;847:68:64;:::i;:::-;-1:-1:-1;2196:180:26;;;2502:10;2409:31;1009:8845;;;817:13:45;1009:8845:26;2279:13;1009:8845;;;;;2279:13;;:::i;:::-;1009:8845;;;;;;;2228:18;2196:180;;;2409:31;:::i;:::-;-1:-1:-1;;;;;1009:8845:26;;;2502:10;1009:8845;;817:13:45;;;;;;;2502:12:26;;;;;;;;;1009:8845;2502:12;;-1:-1:-1;;2502:12:26;;;2196:180;-1:-1:-1;2525:746:26;;;2557:247;;1009:8845;2557:247;;;;1009:8845;2557:247;;;1009:8845;2557:247;;;;2525:746;1009:8845;;;;2939:20;2935:68;;2525:746;3017:244;;1009:8845;3017:244;;;;1009:8845;3017:244;;;1009:8845;3017:244;;;;2935:68;2961:42;2969:33;;2961:42;:::i;:::-;2935:68;;;;2502:12;;;;;;;;817:13:45;2502:12:26;817:13:45;2502:12:26;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;2196:180::-;2502:10;2409:31;1009:8845;;;;817:13:45;1009:8845:26;2361:13;1009:8845;;;;;2361:13;;:::i;:::-;1009:8845;;;;;;;2310:18;2196:180;;;2409:31;:::i;1860:36::-;-1:-1:-1;1880:16:26;;;1860:36;;1009:8845;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;553:2:63;1009:8845:26;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;1009:8845:26;;;;;;;:::o;8268:1584::-;;;9350:45;9044:291;8268:1584;1009:8845;8533:19;1009:8845;8601:30;8615:15;;;:::i;:::-;8601:30;:::i;:::-;8684:15;;9556:3;9515:27;9350:45;9409:57;8671:29;8684:15;;;;:::i;8671:29::-;8711:13;1009:8845;8734:1112;;;;1009:8845;8811:22;;;:::i;:::-;1009:8845;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1009:8845:26;;;;;;9084:237;;;1009:8845;9084:237;;1009:8845;;9084:237;;;1009:8845;9084:237;;;1009:8845;;;9044:291;:::i;:::-;9350:45;;;;;;;:::i;:::-;-1:-1:-1;;;;;1009:8845:26;;;;;;9350:45;9409:57;;;;:::i;:::-;1009:8845;;;;;;9409:57;9480:21;9515:27;;:::i;:::-;9556:3;;:::i;:::-;1009:8845;;;;1082:40:66;;9629:207:26;1009:8845;;;9683:16;;;;;;;;:::i;:::-;8734:1112;;9350:45;;9629:207;;;;;;;;9556:3;;9515:27;;9350:45;;9409:57;;8734:1112;9044:291;;8734:1112;;9629:207;9738:83;;;-1:-1:-1;;;;;9738:83:26:o;1009:8845::-;-1:-1:-1;;;1009:8845:26;;;;;;;:::o;817:13:45:-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;817:13:45;;;;:::o;:::-;;;;;;;;;;;;;;;1009:8845:26;817:13:45;;1009:8845:26;;;;;;;;;;;817:13:45;;;:::i;:::-;1009:8845:26;;-1:-1:-1;;1009:8845:26;817:13:45;;;:::o;:::-;-1:-1:-1;;;;;1009:8845:26;;;;;817:13:45;;;;;;;;;;1009:8845:26;;;;;;817:13:45;;;1009:8845:26;817:13:45;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;1009:8845:26;;817:13:45;;;;;;;;;;;;;;;;;:::i;:::-;1009:8845:26;;;;;;;:::i;:::-;817:13:45;;;-1:-1:-1;817:13:45;;;;:::o;:::-;1009:8845:26;817:13:45;:::o;:::-;;;;;;;;;;:::o;6997:1265:26:-;1009:8845;;7269:15;;;1009:8845;;7357:10;;;1009:8845;;;;;-1:-1:-1;;;;;1009:8845:26;;;;;;;7252:32;;;;1009:8845;;;;;;;;;;7947:61;;7357:10;7316:52;;1009:8845;;;;;7316:52;;:::i;:::-;7492:24;;;;1009:8845;;;;;;;;;;;;;;;7492:29;7488:66;;6997:1265;7584:9;;;7732:13;;;;;1009:8845;7731:25;7732:24;:13;;;1009:8845;7732:24;:::i;:::-;7731:25;:::i;:::-;1009:8845;;-1:-1:-1;;;;;1009:8845:26;;;;;;;;;-1:-1:-1;7819:70:26;;;;7947:61;1009:8845;;;817:13:45;7819:70:26;7770:163;;1009:8845;-1:-1:-1;;;;;1009:8845:26;;;;;;;;;;;;;-1:-1:-1;;;;;1009:8845:26;;;;;;7947:61;;;7269:15;7947:61;;817:13:45;;;;;;;;;;;;;1009:8845:26;817:13:45;;;;;;;;;;;;;;;;;;;;7947:61:26;;1009:8845;;7947:61;;;;;;:::i;:::-;7607:411;1009:8845;;817:13:45;;;;;;;;;;7607:411:26;;7638:4;7607:411;;;;:::i;:::-;;1009:8845;;;7607:411;;;;;;7770:163;-1:-1:-1;;7603:653:26;;8022:234;;;8206:39;8022:234;;;8117:29;1009:8845;8078:21;8022:234;;:::i;:::-;8090:9;;8078:21;;:::i;8117:29::-;;8113:57;;7603:653;8206:39;;:::i;:::-;8199:46;;;;;;:::o;8113:57::-;817:13:45;;8113:57:26;;;7603:653;;;;;;;;;6997:1265::o;7607:411::-;;;;;;-1:-1:-1;7607:411:26;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;7819:70;7947:61;1009:8845;;;1008:65:45;7819:70:26;;7770:163;1009:8845;;;7947:61;7770:163;;;;7488:66;7541:13;;;1009:8845;;;7488:66;;4409:994;1009:8845;;4680:15;;;1009:8845;;4768:10;;;1009:8845;;;;;4768:10;;-1:-1:-1;;;;;1009:8845:26;;;;;;;4680:15;;1009:8845;;;;;;;;4663:32;;;;4727:52;;1009:8845;;;;;4727:52;4810:9;;4957:15;;;;;5174:61;4957:26;:15;;;1009:8845;4957:26;:::i;:::-;4997:24;;;1009:8845;4997:24;;;-1:-1:-1;;;;;1009:8845:26;;;5174:61;4833:412;1009:8845;;817:13:45;;;;;;;;;;4833:412:26;;4864:4;4833:412;;;;:::i;:::-;;1009:8845;;;4833:412;;;;;;4997:163;-1:-1:-1;;4829:568:26;;5249:148;;;5347:39;5249:148;;;5305:21;5249:148;;:::i;:::-;5317:9;;5305:21;;:::i;:::-;5347:39;;:::i;4829:568::-;;;;;;4409:994::o;4833:412::-;;;;;;-1:-1:-1;4833:412:26;;;;;;:::i;:::-;;;5409:1582;;;6490:45;6185:290;5409:1582;1009:8845;5673:19;1009:8845;5741:30;5755:15;;;:::i;5741:30::-;5824:15;;6696:3;6655:27;6490:45;6549:57;5811:29;5824:15;;;;:::i;5811:29::-;5851:13;1009:8845;5874:1111;;;;1009:8845;5951:22;;;:::i;:::-;1009:8845;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1009:8845:26;;;;;;6224:237;;;1009:8845;6224:237;;1009:8845;;6224:237;;;1009:8845;6224:237;;;1009:8845;;;6185:290;:::i;6696:3::-;1009:8845;;;;1082:40:66;;6769:206:26;1009:8845;;;6823:16;;;;;;;;:::i;:::-;5874:1111;;6490:45;;6769:206;;;;;;;;6696:3;;6655:27;;6490:45;;6549:57;;5874:1111;6185:290;;5874:1111;;1009:8845;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;817:13:45;;;1009:8845:26;;;;;:::o;506:20:66:-;1009:8845:26;;;506:20:66;;;;;;;;1281:235;1009:8845:26;-1:-1:-1;;817:13:45;;;;;;;1009:8845:26;506:20:66;;1281:235;:::o;1778:268::-;;3374:62:63;3329:2;1009:8845:26;;3382:28:63;;3374:62;:::i;:::-;3476:135;;;;;;1009:8845:26;;;;3816:27:63;1009:8845:26;;3476:135:63;1009:8845:26;3904:97:63;;;1009:8845:26;3374:62:63;1009:8845:26;;;3382:28:63;;3374:62;:::i;:::-;3476:135;;;;1778:268:66;:::o;1009:8845:26:-;;;-1:-1:-1;;;1009:8845:26;;3476:135:63;1009:8845:26;;;;3329:2:63;1009:8845:26;;;;-1:-1:-1;;;1009:8845:26;;;;;;;2588:149:66;1009:8845:26;;-1:-1:-1;;817:13:45;;;;;;;;;;535:50:63;543:12;;;;:::i;:::-;:23;;535:50;:::i;:::-;595:53;1009:8845:26;603:16:63;;;:::i;595:53::-;658:63;1009:8845:26;;683:16:63;;;:::i;:::-;-1:-1:-1;666:33:63;658:63;:::i;:::-;1009:8845:26;765:2410:63;;1009:8845:26;;765:2410:63;;;;;;-1:-1:-1;765:2410:63;;;;;;;2588:149:66;:::o;765:2410:63:-;1009:8845:26;765:2410:63;;;553:2;765:2410;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;765:2410:63;;553:2;765:2410;-1:-1:-1;;765:2410:63;;;;2588:149:66:o;765:2410:63:-;;;;;;;;;;;;;;;;1431:219:26;-1:-1:-1;;;;;1009:8845:26;1562:80;;1598:43;;;:::i;:::-;1589:7;1562:80;:::i;:::-;1009:8845;1431:219;:::o;923:123:43:-;-1:-1:-1;;;1003:12:43;;1009:8845:26;;;923:123:43;:::o;3830:573:26:-;1009:8845;;-1:-1:-1;;;4132:12:26;;3830:573;;1009:8845;;3830:573;;817:13:45;1009:8845:26;4132:12;1009:8845;-1:-1:-1;;;;;1009:8845:26;;4132:12;;;;;;;;;;;3830:573;1009:8845;;;3546:2;3529:19;;3525:231;;1009:8845;3772:45;1009:8845;3772:45;1009:8845;4257:56;1009:8845;;3772:45;;;;;;:::i;:::-;4257:56;;;;;:::i;:::-;4324:72;;;;3830:573;:::o;3525:231::-;3584:2;-1:-1:-1;3564:50:26;;3716:28;3628:68;3716:28;3628:68;4132:12;3709:36;3628:68;;1009:8845;3716:28;;;;;;:::i;:::-;1009:8845;;-1:-1:-1;;;3709:36:26;;1009:8845;;;4132:12;3709:36;;;:::i;:::-;;;;3564:50;1009:8845;;-1:-1:-1;;;3588:26:26;;1009:8845;4132:12;3588:26;;1009:8845;;;;;;-1:-1:-1;;;3584:2:26;1009:8845;;;;;3588:26;4132:12;;;;;817:13:45;4132:12:26;817:13:45;4132:12:26;;;;;;;:::i;:::-;;;;;;;;;;;;1009:8845;;;;:::o;:::-;;;-1:-1:-1;;;1009:8845:26;;;;;;;;;;;;-1:-1:-1;;;1009:8845:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1009:8845:26;;;;;;;;;;;;-1:-1:-1;;;1009:8845:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1009:8845:26;;;;;;;;;;;;-1:-1:-1;;;1009:8845:26;;;;;;;824:272:67;;1009:8845:26;824:272:67;-1:-1:-1;1009:8845:26;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1009:8845:26;;;;;;;969:15:67;965:56;;824:272;1009:8845:26;;;;;;;:::i;:::-;;;;;;1038:51:67;;1009:8845:26;;;1038:51:67;;1009:8845:26;824:272:67;:::o;965:56::-;;;;1343:664;1009:8845:26;;1500:10:67;;;1009:8845:26;;1500:10:67;;1009:8845:26;-1:-1:-1;;;;;1009:8845:26;;;;;-1:-1:-1;1009:8845:26;;;1687:249:67;;1577:423;1009:8845:26;1598:392:67;1009:8845:26;-1:-1:-1;1009:8845:26;;;1500:10:67;5892:43:31;;;;;;;;281:66:67;5892:43:31;;;1009:8845:26;5892:43:31;;;;;;:::i;:::-;358:279;;131:42;358:279;;-1:-1:-1;1009:8845:26;;;;;;;;-1:-1:-1;;;;;1009:8845:26;;;-1:-1:-1;;;;;1009:8845:26;;;;1852:7:67;;1009:8845:26;;;;;;;;;-1:-1:-1;;;;;1009:8845:26;;;1500:10:67;1817:43;;1009:8845:26;;;;;;;281:66:67;;;1009:8845:26;;;281:66:67;;;;;;;;1817:43;;-1:-1:-1;;;1817:43:67;;281:66;1009:8845:26;1817:43:67;:::i;:::-;1009:8845:26;1807:54:67;;1009:8845:26;;-1:-1:-1;;;;;;1500:10:67;1687:249;;281:66;;;817:13:45;;;;;-1:-1:-1;;817:13:45;281:66:67;;;817:13:45;281:66:67;;;1009:8845:26;;;;281:66:67;;;;1009:8845:26;;;;281:66:67;;;;;1687:249;;;;;;;;;:::i;:::-;1009:8845:26;1652:306:67;;-1:-1:-1;;;;;1009:8845:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;1009:8845:26;;-1:-1:-1;;1009:8845:26;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;1009:8845:26;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;1009:8845:26;;;;;;;:::o;627:3373:29:-;1009:8845:26;;-1:-1:-1;;;1113:18:29;;627:3373;;;1009:8845:26;;627:3373:29;1113:18;1009:8845:26;1113:18:29;1009:8845:26;-1:-1:-1;;;;;1009:8845:26;;1113:18:29;;;;;;1100:31;1113:18;1009:8845:26;1113:18:29;;;627:3373;1100:31;;;:::i;:::-;1009:8845:26;;-1:-1:-1;;;1178:18:29;;1009:8845:26;;;1113:18:29;1009:8845:26;1113:18:29;1009:8845:26;-1:-1:-1;;;;;1009:8845:26;;1178:18:29;;;;;;1166:30;1178:18;1009:8845:26;1178:18:29;;;1166:30;;;:::i;:::-;1009:8845:26;;;;;;;;;;;;;;1320:11:29;1316:64;;627:3373;1009:8845:26;;;;;;;;;;1560:10:29;1556:62;;627:3373;1009:8845:26;;-1:-1:-1;;;2115:29:29;;1009:8845:26;;;;;;1113:18:29;2115:29;;1009:8845:26;1113:18:29;1009:8845:26;;;-1:-1:-1;;;;;1009:8845:26;;2115:29:29;;;;;;;1009:8845:26;2115:29:29;;;627:3373;1009:8845:26;;;;;817:13:45;2115:50:29;2114:56;;2113:117;;;;627:3373;2113:145;;;627:3373;1009:8845:26;;-1:-1:-1;;;2298:24:29;;1009:8845:26;;;;;;1113:18:29;2298:24;;1009:8845:26;1113:18:29;1009:8845:26;;;-1:-1:-1;;;;;1009:8845:26;;2298:24:29;;;;;;;1009:8845:26;2298:24:29;;;627:3373;1009:8845:26;;;;;817:13:45;2298:40:29;2297:46;;2296:108;;;;627:3373;2296:136;;;627:3373;1009:8845:26;;;;;;;;;;;;2544:22:29;:76;;;;627:3373;2540:454;;;1009:8845:26;;;;;;;;;;;;;;;2540:454:29;;;;;;1009:8845:26;;;;;817:13:45;3241:533:29;1009:8845:26;;;;;;3248:29:29;;;1009:8845:26;;;;;;3394:29:29;3390:125;;3241:533;1009:8845:26;;-1:-1:-1;;;3546:29:29;;1009:8845:26;;;;1113:18:29;3546:29;;1009:8845:26;;1113:18:29;1009:8845:26;;;-1:-1:-1;;;;;1009:8845:26;;3546:29:29;;;;;;3623:20;3596:47;3546:29;3596:47;3546:29;3657:14;3546:29;1009:8845:26;3546:29:29;;;3241:533;3546:36;;3623:20;:::i;:::-;1009:8845:26;;;;3596:47:29;;;:::i;:::-;3657:14;;:::i;:::-;1009:8845:26;-1:-1:-1;;3241:533:29;;3546:29;;;;1113:18;3546:29;1113:18;3546:29;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;3390:125;3458:41;3480:18;;;:::i;:::-;1009:8845:26;;;;;;;;3458:41:29;3450:50;3390:125;;3248:29;;;;;;;;;3784:79;;3241:533;3873:80;;627:3373;:::o;3873:80::-;3914:28;;;:::i;3784:79::-;3824:28;;;;:::i;:::-;3784:79;;;2540:454;1009:8845:26;;;;;;;;;;;;;;;;;;;2540:454:29;;;;;;;2544:76;1009:8845:26;;;;;;;;;;;2571:23:29;:48;;2544:76;2571:48;1009:8845:26;;;;;;;2598:21:29;;2544:76;;2296:136;1009:8845:26;;;;;;;2409:22:29;;-1:-1:-1;2296:136:29;;;;:108;1009:8845:26;;-1:-1:-1;;;2379:18:29;;1009:8845:26;;-1:-1:-1;1113:18:29;1009:8845:26;1113:18:29;1009:8845:26;-1:-1:-1;;;;;1009:8845:26;;2379:18:29;;;;;;;2365:38;2379:18;2366:31;2379:18;1009:8845:26;2379:18:29;;;2296:108;2366:31;;;:::i;:::-;1009:8845:26;;;;2365:38:29;;2296:108;;;2379:18;;;;1113;2379;1113;2379;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;2298:24;;;;1113:18;2298:24;1113:18;2298:24;;;;;;;:::i;:::-;;;;2113:145;1009:8845:26;;;;;;;;2235:22:29;2113:145;;;:117;1009:8845:26;;-1:-1:-1;;;2205:18:29;;1009:8845:26;;-1:-1:-1;1113:18:29;1009:8845:26;1113:18:29;1009:8845:26;-1:-1:-1;;;;;1009:8845:26;;2205:18:29;;;;;;;2192:37;2205:18;2193:30;2205:18;1009:8845:26;2205:18:29;;;2113:117;2193:30;;;:::i;2192:37::-;;2113:117;;;2205:18;;;;1113;2205;1113;2205;;;;;;;:::i;:::-;;;;2115:29;;;;1113:18;2115:29;1113:18;2115:29;;;;;;;:::i;:::-;;;;1556:62;1590:13;;;;:::i;:::-;1556:62;;;1316:64;1351:14;;;;:::i;:::-;1316:64;;;1178:18;;;;1113;1178;1113;1178;;;;;;;:::i;:::-;;;;1169:279:64;-1:-1:-1;;;;;1009:8845:26;1350:44:64;;;:::i;:::-;1009:8845:26;1413:10:64;;;:27;1009:8845:26;;1169:279:64:o;4006:197:29:-;4079:15;4093:1;4104:72;4111:6;;;4185:11;4006:197;:::o;4104:72::-;1009:8845:26;;;;;;;;;;4163:1:29;1009:8845:26;;-1:-1:-1;;817:13:45;;;;;;;;4153:12:29;4104:72;;",
    "linkReferences": {},
    "immutableReferences": {
      "16225": [
        {
          "start": 898,
          "length": 32
        },
        {
          "start": 1114,
          "length": 32
        },
        {
          "start": 3629,
          "length": 32
        }
      ],
      "16229": [
        {
          "start": 154,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "WETH9()": "4aa4a4fc",
    "factory()": "c45a0155",
    "quoteExactInput(bytes,uint256)": "cdca1753",
    "quoteExactInputSingle((address,address,uint256,uint24,uint160))": "c6a5026a",
    "quoteExactOutput(bytes,uint256)": "2f80bb1d",
    "quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "bd21704a",
    "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"stateVariables\":{\"amountOutCached\":{\"details\":\"Transient storage variable used to check a safety condition in exact output swaps.\"}},\"title\":\"Provides quotes for swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Allows getting the expected amount out or amount in for a given swap without executing the swap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2.sol\":\"QuoterV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":kitchen-dex-core/=lib/kitchen-dex-core/src/\",\":kitchen-dex-periphery/=lib/kitchen-dex-periphery/src/\",\":kitchen-precompiles/=lib/precompiles-solidity/src/\",\":kitchen-v2-core/=lib/kitchen-v2-core/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":precompiles-solidity/=lib/kitchen-dex-periphery/lib/precompiles-solidity/\",\":solady/=lib/kitchen-dex-periphery/lib/precompiles-solidity/lib/solady/src/\",\":v2-core/=lib/kitchen-dex-core/lib/v2-core/contracts/\",\":v3-core-contracts/=lib/kitchen-dex-periphery/lib/precompiles-solidity/lib/v3-core/contracts/\",\":v3-periphery-contracts/=lib/kitchen-dex-periphery/lib/precompiles-solidity/lib/v3-periphery/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IQuoterV2.sol\":{\"keccak256\":\"0xb6cbd5a3a24302241408556119d5fdf62bcccda894b2eb9e2c7a215f502fa13e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://993dd1ea1a7285e3ade513bc8af487d4efb65dfc41292019a63a268416f67427\",\"dweb:/ipfs/Qma1MhYeCAasDy1gBJEbcUw6pJATTZHkUWGxgWN16QhzB3\"]},\"contracts/lens/QuoterV2.sol\":{\"keccak256\":\"0x132e989b5fd2609539efe5c1719dbd4a84f92a134a32da5e274caf2a29e0a40c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49eeffbcbb31f68aea8d117b453a104135c7e745f9d0499eafc7b0ca8a300bba\",\"dweb:/ipfs/QmPWbvs9diaAoAsAqJ2vesah3vUUvw6bewi345xiK2stiB\"]},\"contracts/libraries/PoolTicksCounter.sol\":{\"keccak256\":\"0x30cddcf9097f84e315ea97265006ccb97e2fef2ef11bb6c819b3436ff3d5ad93\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://856553e4c3907a81bcadb0b533f90b8b7bd6177d64c79b42809973ec75f79ca2\",\"dweb:/ipfs/Qmduqx2XibDxTQwL5ZAA5FMutnYGR3TWJkmJnh5mZvZthM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/kitchen-dex-core/src/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x89d3262aac1105665ca6a83ec8e29c951123dd998df9a52a8dd30296642c2425\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://edca9635ed2aefabc9a3e4d3ffddef0d9a2887bb5ca811e3aeda92cd396bd1c9\",\"dweb:/ipfs/QmaXyTQHUkGvoA3SgEamaYzd9yJe5gFqocUEWT9U7dzBeZ\"]},\"lib/kitchen-dex-core/src/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x232c3df87c0c471c2bb0e4ec2517d499b28d9538a941e37f408095fb93a50e5d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5fec80efd09d148927e8e6e13a92d67b5c6a7817b7c6eafcc7bfdabfbdb91440\",\"dweb:/ipfs/QmSjP3ET8XaHQp9b6zV6Gp8z7yUeZMAo95LdSnitCy6Y8G\"]},\"lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xbd7bd7f2fcf836799776bcba7bbb609f2d90eed906a6066dc35d6882ca981028\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://679371af0f965881cf2b884758ad7c52ed77b358fd2f904b8641922e9b9271a0\",\"dweb:/ipfs/QmYvh2gHdwSUZ3CpvucZUyTcdeTcw28QDE2chFgDz5ww2L\"]},\"lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xf44883d8c8c4f696b991260b14911e00fa780f6cc362ac0e5c3f8e05311fc0f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c70d2d25fc283390db58921ff3fb3d53d6a414313f8fbb5b86637413fb798e4e\",\"dweb:/ipfs/QmbQ9YvRgmBjWBFfjbHnBha29myQKha6SrLNPCecSQb6A9\"]},\"lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xdd271e2ff465939e8c38243d1d73f7087b4eb29b8a70d809b1432313017c5a8d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://126fd841c71638f8a90fab57adbf333db633d53708b311ed3919b4a36838297a\",\"dweb:/ipfs/QmQdfe8mnumHiUSGxcPTij8PfbrtRVYQPoQF2hB2nf1hPR\"]},\"lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x1dd9d63523907585292b947d310c5bb4dcc1d688bc23542f391d72c3c2e6ddfd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9db6e1b2dac0a8dbf0cebd2013acc16d5b1c640103f8457bb3138b7813497160\",\"dweb:/ipfs/QmbBhz8yJdcKGBzSZmNYyHjoz6ptRRDo1ZArXkQdKnh6gj\"]},\"lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x718143ded6c17349932749a7f0f3caebe89a0644b1c523a73b36d0a6731b9a25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5200ed3d593ee8fcf334cb225db07378f2e05159d5c530ae095a79073c5d3c\",\"dweb:/ipfs/QmYxHHvDbp7rThBSd2EPnQTiRJZ9oQXJNxwnFDEHiZQrRk\"]},\"lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9b5a3b3bc51ab8004cc9d5fd4209aaafc8a702ca3c5769cbda2f0e12a3ac0075\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f039df2ebe25ec1ed68e6bfc2c28ad5647e417fabc806fba4011e6a6f230e15c\",\"dweb:/ipfs/Qmdt3ge4ts73pabAipSpn9CHommejUuv1CdoT78FvbEmLn\"]},\"lib/kitchen-dex-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x7397b91a7e3d051ffb749540fa5a907373ff14ca9e7f0e54ba4d2287ed525e6a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://73a9c0e1256c549b57fc24c3469494fc5b9343d1c397efbcca092e70f34e7ec1\",\"dweb:/ipfs/QmWCvB6ZjThFzEVEfT7fpvuaJeuLnb9HMSCL66JicjCd6j\"]},\"lib/kitchen-dex-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xf53c2cdb7bbd6f00a68be19305e6219594ed72e9073525f2be5833e20676e4b5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1596cd076287b0b17889a97a4e23df9dfc90f0428e025d9da67f3f3711910800\",\"dweb:/ipfs/QmXivTiAGKo5P9NrAJVGiK9AiCRAE3Be7JMRXVR2uAHjKS\"]},\"lib/kitchen-dex-core/src/libraries/TickBitmap.sol\":{\"keccak256\":\"0x5504397aa659b7245801a0841bbb7e9065571b2536d7a527b35148e34d4004f7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b5aa4ca9f907790afc1fef1d292607116f5445825d3032a8ccd1e44209302a69\",\"dweb:/ipfs/QmWRRGQ3yGyJLt4tTaMWJVhvspaZAAehmSqM6E1mLLFNxX\"]},\"lib/kitchen-dex-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x97ae1cf536b70034fdd96a24612272f1ea55344d8045f072969db3e59657e86b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99fcc21b687b8b26f8bbda473338080ef8dde8d5c75de8e628ca102704e5195\",\"dweb:/ipfs/QmNfr4zYJLqnmfpFDQYSRijsboEhYzERJfV7SzumLzk1RC\"]},\"lib/kitchen-dex-periphery/src/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xd7a73ef5fdd23b9543e336579d2c654381ae448fa2cb2898d0ba36856d472794\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e08267ef49c281339efd1fc8aabb440ef08b41325bae78ad32bfe8d858872a6\",\"dweb:/ipfs/QmSFqchUFG57UWCgE4pSDytgdb26SYTxgPPLgRL9DNsznw\"]},\"lib/kitchen-dex-periphery/src/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x67e63dd61e51d9a183fe01103de51efd0f22641df4183ee9b3a62f490d685cb9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://215dd249806804e3d7ff9b8a6c67ca2c7c23b72aac92627cea51b4c673afc0ea\",\"dweb:/ipfs/QmNb6V6ngjmxoWqLTLBrwK1JpiiXDUfMivp31mzxNMbWFW\"]},\"lib/kitchen-dex-periphery/src/libraries/BytesLib.sol\":{\"keccak256\":\"0xe59c4fa3fc88f313d735ed5e9e0f21c603dd62578e744b9145896438ddda87ba\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://82642cce3e1095a1a0ac047362b1f6760ff182136d6ef376a9f862fee32af812\",\"dweb:/ipfs/QmeQgYqiDYrv8gx2fghTPbmqwtGJQxbYE7wUd2TeY8KBzE\"]},\"lib/kitchen-dex-periphery/src/libraries/CallbackValidation.sol\":{\"keccak256\":\"0x3a0fb52bd4bbcc247a23bbd76416f862f50e88ca65eca48cb6e2139b52bd5e90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e74e91db0e44897e1fe9cfb50ac57c1f6f14abae0120821c01381eaead9c49d9\",\"dweb:/ipfs/QmTBjvFq6H5LuXFBVwH2x8VAjJJ1AmKmiKrv2rrfUWEUih\"]},\"lib/kitchen-dex-periphery/src/libraries/Path.sol\":{\"keccak256\":\"0xcb0a89651e1e36b5dc2b4e170b6fe275128fdfb990fa8e49b89266c8ea021b1f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://078ad6ce598520481c04f27b312d7a780d6232911ef1756e87f9a6095e0432ab\",\"dweb:/ipfs/QmSpvUY6g673KFGpqZh1f5hFEfbcjtpixam2fDgPWvBDAH\"]},\"lib/kitchen-dex-periphery/src/libraries/PoolAddress.sol\":{\"keccak256\":\"0xbaa014fe0850dcf97a8605754677380ccca90ddd8581831fee92978bfd09e540\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://739f443e066e5e9d2bfc97d2a828efe8de8741adb1e7c98985973a3e1927a9a8\",\"dweb:/ipfs/QmNZTfAg6xLKGo9qEbsLo19Epbuf7qR1iSMTQuuBKQokoF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.24+commit.e11b9ed9"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_WETH9",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExactInput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint160[]",
              "name": "sqrtPriceX96AfterList",
              "type": "uint160[]"
            },
            {
              "internalType": "uint32[]",
              "name": "initializedTicksCrossedList",
              "type": "uint32[]"
            },
            {
              "internalType": "uint256",
              "name": "gasEstimate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExactInputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96After",
              "type": "uint160"
            },
            {
              "internalType": "uint32",
              "name": "initializedTicksCrossed",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "gasEstimate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExactOutput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint160[]",
              "name": "sqrtPriceX96AfterList",
              "type": "uint160[]"
            },
            {
              "internalType": "uint32[]",
              "name": "initializedTicksCrossedList",
              "type": "uint32[]"
            },
            {
              "internalType": "uint256",
              "name": "gasEstimate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExactOutputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96After",
              "type": "uint160"
            },
            {
              "internalType": "uint32",
              "name": "initializedTicksCrossed",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "gasEstimate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "amount0Delta",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "amount1Delta",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uniswapV3SwapCallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "quoteExactInput(bytes,uint256)": {
            "params": {
              "amountIn": "The amount of the first token to swap",
              "path": "The path of the swap, i.e. each token pair and the pool fee"
            },
            "returns": {
              "amountOut": "The amount of the last token that would be received",
              "gasEstimate": "The estimate of the gas that the swap consumes",
              "initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
              "sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
            }
          },
          "quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
            "params": {
              "params": "The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
            },
            "returns": {
              "amountOut": "The amount of `tokenOut` that would be received",
              "gasEstimate": "The estimate of the gas that the swap consumes",
              "initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
              "sqrtPriceX96After": "The sqrt price of the pool after the swap"
            }
          },
          "quoteExactOutput(bytes,uint256)": {
            "params": {
              "amountOut": "The amount of the last token to receive",
              "path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
            },
            "returns": {
              "amountIn": "The amount of first token required to be paid",
              "gasEstimate": "The estimate of the gas that the swap consumes",
              "initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
              "sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
            }
          },
          "quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
            "params": {
              "params": "The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
            },
            "returns": {
              "amountIn": "The amount required as the input for the swap in order to receive `amountOut`",
              "gasEstimate": "The estimate of the gas that the swap consumes",
              "initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
              "sqrtPriceX96After": "The sqrt price of the pool after the swap"
            }
          },
          "uniswapV3SwapCallback(int256,int256,bytes)": {
            "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
            "params": {
              "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
              "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
              "data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "quoteExactInput(bytes,uint256)": {
            "notice": "Returns the amount out received for a given exact input swap without executing the swap"
          },
          "quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
            "notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
          },
          "quoteExactOutput(bytes,uint256)": {
            "notice": "Returns the amount in required for a given exact output swap without executing the swap"
          },
          "quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
            "notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
          },
          "uniswapV3SwapCallback(int256,int256,bytes)": {
            "notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "kitchen-dex-core/=lib/kitchen-dex-core/src/",
        "kitchen-dex-periphery/=lib/kitchen-dex-periphery/src/",
        "kitchen-precompiles/=lib/precompiles-solidity/src/",
        "kitchen-v2-core/=lib/kitchen-v2-core/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "precompiles-solidity/=lib/kitchen-dex-periphery/lib/precompiles-solidity/",
        "solady/=lib/kitchen-dex-periphery/lib/precompiles-solidity/lib/solady/src/",
        "v2-core/=lib/kitchen-dex-core/lib/v2-core/contracts/",
        "v3-core-contracts/=lib/kitchen-dex-periphery/lib/precompiles-solidity/lib/v3-core/contracts/",
        "v3-periphery-contracts/=lib/kitchen-dex-periphery/lib/precompiles-solidity/lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/lens/QuoterV2.sol": "QuoterV2"
      },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/interfaces/IQuoterV2.sol": {
        "keccak256": "0xb6cbd5a3a24302241408556119d5fdf62bcccda894b2eb9e2c7a215f502fa13e",
        "urls": [
          "bzz-raw://993dd1ea1a7285e3ade513bc8af487d4efb65dfc41292019a63a268416f67427",
          "dweb:/ipfs/Qma1MhYeCAasDy1gBJEbcUw6pJATTZHkUWGxgWN16QhzB3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/lens/QuoterV2.sol": {
        "keccak256": "0x132e989b5fd2609539efe5c1719dbd4a84f92a134a32da5e274caf2a29e0a40c",
        "urls": [
          "bzz-raw://49eeffbcbb31f68aea8d117b453a104135c7e745f9d0499eafc7b0ca8a300bba",
          "dweb:/ipfs/QmPWbvs9diaAoAsAqJ2vesah3vUUvw6bewi345xiK2stiB"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/PoolTicksCounter.sol": {
        "keccak256": "0x30cddcf9097f84e315ea97265006ccb97e2fef2ef11bb6c819b3436ff3d5ad93",
        "urls": [
          "bzz-raw://856553e4c3907a81bcadb0b533f90b8b7bd6177d64c79b42809973ec75f79ca2",
          "dweb:/ipfs/Qmduqx2XibDxTQwL5ZAA5FMutnYGR3TWJkmJnh5mZvZthM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5",
        "urls": [
          "bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57",
          "dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP"
        ],
        "license": "MIT"
      },
      "lib/kitchen-dex-core/src/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x89d3262aac1105665ca6a83ec8e29c951123dd998df9a52a8dd30296642c2425",
        "urls": [
          "bzz-raw://edca9635ed2aefabc9a3e4d3ffddef0d9a2887bb5ca811e3aeda92cd396bd1c9",
          "dweb:/ipfs/QmaXyTQHUkGvoA3SgEamaYzd9yJe5gFqocUEWT9U7dzBeZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x232c3df87c0c471c2bb0e4ec2517d499b28d9538a941e37f408095fb93a50e5d",
        "urls": [
          "bzz-raw://5fec80efd09d148927e8e6e13a92d67b5c6a7817b7c6eafcc7bfdabfbdb91440",
          "dweb:/ipfs/QmSjP3ET8XaHQp9b6zV6Gp8z7yUeZMAo95LdSnitCy6Y8G"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0xbd7bd7f2fcf836799776bcba7bbb609f2d90eed906a6066dc35d6882ca981028",
        "urls": [
          "bzz-raw://679371af0f965881cf2b884758ad7c52ed77b358fd2f904b8641922e9b9271a0",
          "dweb:/ipfs/QmYvh2gHdwSUZ3CpvucZUyTcdeTcw28QDE2chFgDz5ww2L"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xf44883d8c8c4f696b991260b14911e00fa780f6cc362ac0e5c3f8e05311fc0f0",
        "urls": [
          "bzz-raw://c70d2d25fc283390db58921ff3fb3d53d6a414313f8fbb5b86637413fb798e4e",
          "dweb:/ipfs/QmbQ9YvRgmBjWBFfjbHnBha29myQKha6SrLNPCecSQb6A9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0xdd271e2ff465939e8c38243d1d73f7087b4eb29b8a70d809b1432313017c5a8d",
        "urls": [
          "bzz-raw://126fd841c71638f8a90fab57adbf333db633d53708b311ed3919b4a36838297a",
          "dweb:/ipfs/QmQdfe8mnumHiUSGxcPTij8PfbrtRVYQPoQF2hB2nf1hPR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0x1dd9d63523907585292b947d310c5bb4dcc1d688bc23542f391d72c3c2e6ddfd",
        "urls": [
          "bzz-raw://9db6e1b2dac0a8dbf0cebd2013acc16d5b1c640103f8457bb3138b7813497160",
          "dweb:/ipfs/QmbBhz8yJdcKGBzSZmNYyHjoz6ptRRDo1ZArXkQdKnh6gj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x718143ded6c17349932749a7f0f3caebe89a0644b1c523a73b36d0a6731b9a25",
        "urls": [
          "bzz-raw://2b5200ed3d593ee8fcf334cb225db07378f2e05159d5c530ae095a79073c5d3c",
          "dweb:/ipfs/QmYxHHvDbp7rThBSd2EPnQTiRJZ9oQXJNxwnFDEHiZQrRk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x9b5a3b3bc51ab8004cc9d5fd4209aaafc8a702ca3c5769cbda2f0e12a3ac0075",
        "urls": [
          "bzz-raw://f039df2ebe25ec1ed68e6bfc2c28ad5647e417fabc806fba4011e6a6f230e15c",
          "dweb:/ipfs/Qmdt3ge4ts73pabAipSpn9CHommejUuv1CdoT78FvbEmLn"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/libraries/BitMath.sol": {
        "keccak256": "0x7397b91a7e3d051ffb749540fa5a907373ff14ca9e7f0e54ba4d2287ed525e6a",
        "urls": [
          "bzz-raw://73a9c0e1256c549b57fc24c3469494fc5b9343d1c397efbcca092e70f34e7ec1",
          "dweb:/ipfs/QmWCvB6ZjThFzEVEfT7fpvuaJeuLnb9HMSCL66JicjCd6j"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/libraries/SafeCast.sol": {
        "keccak256": "0xf53c2cdb7bbd6f00a68be19305e6219594ed72e9073525f2be5833e20676e4b5",
        "urls": [
          "bzz-raw://1596cd076287b0b17889a97a4e23df9dfc90f0428e025d9da67f3f3711910800",
          "dweb:/ipfs/QmXivTiAGKo5P9NrAJVGiK9AiCRAE3Be7JMRXVR2uAHjKS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-core/src/libraries/TickBitmap.sol": {
        "keccak256": "0x5504397aa659b7245801a0841bbb7e9065571b2536d7a527b35148e34d4004f7",
        "urls": [
          "bzz-raw://b5aa4ca9f907790afc1fef1d292607116f5445825d3032a8ccd1e44209302a69",
          "dweb:/ipfs/QmWRRGQ3yGyJLt4tTaMWJVhvspaZAAehmSqM6E1mLLFNxX"
        ],
        "license": "BUSL-1.1"
      },
      "lib/kitchen-dex-core/src/libraries/TickMath.sol": {
        "keccak256": "0x97ae1cf536b70034fdd96a24612272f1ea55344d8045f072969db3e59657e86b",
        "urls": [
          "bzz-raw://b99fcc21b687b8b26f8bbda473338080ef8dde8d5c75de8e628ca102704e5195",
          "dweb:/ipfs/QmNfr4zYJLqnmfpFDQYSRijsboEhYzERJfV7SzumLzk1RC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-periphery/src/base/PeripheryImmutableState.sol": {
        "keccak256": "0xd7a73ef5fdd23b9543e336579d2c654381ae448fa2cb2898d0ba36856d472794",
        "urls": [
          "bzz-raw://5e08267ef49c281339efd1fc8aabb440ef08b41325bae78ad32bfe8d858872a6",
          "dweb:/ipfs/QmSFqchUFG57UWCgE4pSDytgdb26SYTxgPPLgRL9DNsznw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-periphery/src/interfaces/IPeripheryImmutableState.sol": {
        "keccak256": "0x67e63dd61e51d9a183fe01103de51efd0f22641df4183ee9b3a62f490d685cb9",
        "urls": [
          "bzz-raw://215dd249806804e3d7ff9b8a6c67ca2c7c23b72aac92627cea51b4c673afc0ea",
          "dweb:/ipfs/QmNb6V6ngjmxoWqLTLBrwK1JpiiXDUfMivp31mzxNMbWFW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-periphery/src/libraries/BytesLib.sol": {
        "keccak256": "0xe59c4fa3fc88f313d735ed5e9e0f21c603dd62578e744b9145896438ddda87ba",
        "urls": [
          "bzz-raw://82642cce3e1095a1a0ac047362b1f6760ff182136d6ef376a9f862fee32af812",
          "dweb:/ipfs/QmeQgYqiDYrv8gx2fghTPbmqwtGJQxbYE7wUd2TeY8KBzE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-periphery/src/libraries/CallbackValidation.sol": {
        "keccak256": "0x3a0fb52bd4bbcc247a23bbd76416f862f50e88ca65eca48cb6e2139b52bd5e90",
        "urls": [
          "bzz-raw://e74e91db0e44897e1fe9cfb50ac57c1f6f14abae0120821c01381eaead9c49d9",
          "dweb:/ipfs/QmTBjvFq6H5LuXFBVwH2x8VAjJJ1AmKmiKrv2rrfUWEUih"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-periphery/src/libraries/Path.sol": {
        "keccak256": "0xcb0a89651e1e36b5dc2b4e170b6fe275128fdfb990fa8e49b89266c8ea021b1f",
        "urls": [
          "bzz-raw://078ad6ce598520481c04f27b312d7a780d6232911ef1756e87f9a6095e0432ab",
          "dweb:/ipfs/QmSpvUY6g673KFGpqZh1f5hFEfbcjtpixam2fDgPWvBDAH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/kitchen-dex-periphery/src/libraries/PoolAddress.sol": {
        "keccak256": "0xbaa014fe0850dcf97a8605754677380ccca90ddd8581831fee92978bfd09e540",
        "urls": [
          "bzz-raw://739f443e066e5e9d2bfc97d2a828efe8de8741adb1e7c98985973a3e1927a9a8",
          "dweb:/ipfs/QmNZTfAg6xLKGo9qEbsLo19Epbuf7qR1iSMTQuuBKQokoF"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "id": 26
}